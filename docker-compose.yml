version: '3.3'

services:
  proxy:
    image: traefik:v2.3
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    networks:
      - ext
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./acme.json:/acme.json"
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker=true
      - --api
      - --certificatesresolvers.le.acme.email=admin@n3tdom.com
      - --certificatesresolvers.le.acme.storage=/acme.json
      - --certificatesresolvers.le.acme.tlschallenge=true
      # metrics
      - --metrics.prometheus.buckets=0.100000, 0.300000, 1.200000, 5.000000
      - --entryPoints.metrics.address=:8082
      - --metrics.prometheus.entryPoint=metrics
      - --metrics.prometheus.addEntryPointsLabels=true
      - --metrics.prometheus.addServicesLabels=true
    labels:
      # dashboard
      - "traefik.http.routers.traefik.rule=Host(`lb.${COMPOSE_PROJECT_NAME}.n3tdom.com`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=admin"
      - "traefik.http.routers.traefik.tls.certresolver=le"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.middlewares.admin.basicauth.users=dev:$$apr1$$d39ozBX8$$Q47EfEq9ZdD859hJuDORX."
      # redirect to https
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

  frontend:
    image: ghcr.io/${COMPOSE_PROJECT_NAME}/front:${image_tag}
    restart: unless-stopped
    networks:
      - ext
    labels:
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-front.rule=Host(`${COMPOSE_PROJECT_NAME}.n3tdom.com`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-front.tls.certresolver=le"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-front.entrypoints=websecure"

  api:
    image: ghcr.io/${COMPOSE_PROJECT_NAME}/api:${image_tag}
    restart: unless-stopped
    networks:
      - ext
    labels:
      # serve /api & strip /api
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-api.rule=Host(`localhost`) && (PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`))"
      - "traefik.http.middlewares.stripapi.stripprefix.prefixes=/api"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-api.middlewares=stripapi@docker"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-api.tls.certresolver=le"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}-api.loadbalancer.server.port=5000"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-api.entrypoints=websecure"

networks:
  ext:
